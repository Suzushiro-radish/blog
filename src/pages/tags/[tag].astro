---
import { MarkdownInstance } from "astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";

export async function getStaticPaths() {
	const allPosts = await Astro.glob("../posts/*.md");

	return [
		{ params: { tag: "astro" }, props: { posts: allPosts } },
		{ params: { tag: "successes" }, props: { posts: allPosts } },
		{ params: { tag: "community" }, props: { posts: allPosts } },
		{ params: { tag: "blogging" }, props: { posts: allPosts } },
		{ params: { tag: "setbacks" }, props: { posts: allPosts } },
		{ params: { tag: "learning in public" }, props: { posts: allPosts } },
	];
}
const { tag } = Astro.params as { tag: string };
const { posts } = Astro.props as { posts: MarkdownInstance<Record<string, any>>[] };
const filteredPosts = posts.filter((post) => post.frontmatter.tags?.includes(tag));
---

<BaseLayout pageTitle={tag}>
	<p>Posts tagged with {tag}</p>
	<ul>
		{filteredPosts.map((post) => <BlogPost url={post.url} title={post.frontmatter.title} />)}
	</ul>
</BaseLayout>
